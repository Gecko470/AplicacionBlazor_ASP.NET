@page "/misReservas/{idPagina}"
@using MiPrimeraAplicacionBlazor.Shared
@inject HttpClient http
<h3>MisReservas</h3>

@{
    string[] cabeceras = { "ID Reserva", "Nombre Usuario", "Titulo", "Cantidad", "Inicio Reserva", "Fin Reserva" };
    string[] parametrosAmostrar = { "iidReserva", "nombreUsuario", "nombreLibro", "cantidad", "fechaInicioCadena", "fechaFinCadena" };
}


<AuthorizeView>
    <Authorized>
        <ListarRazor2 lista="@listaReservas" cabeceras="@cabeceras" parametrosAmostrar="@parametrosAmostrar"
                      type="text" button=false label="Introduce nombre de Usuario" eventoBusqueda="Buscar"
                      permitirBotonAdicUno=true tituloAdicional1="Desea devolver la Reserva" eventoDatos="Operaciones"
                      permitirBotonAdicDos=true tituloAdicional2="Desea aceptar la Reserva">

            <ChildContent>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-square" viewBox="0 0 16 16">
                    <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                </svg>
            </ChildContent>

            <Footer>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check2-square" viewBox="0 0 16 16">
                    <path d="M3 14.5A1.5 1.5 0 0 1 1.5 13V3A1.5 1.5 0 0 1 3 1.5h8a.5.5 0 0 1 0 1H3a.5.5 0 0 0-.5.5v10a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V8a.5.5 0 0 1 1 0v5a1.5 1.5 0 0 1-1.5 1.5H3z" />
                    <path d="M8.354 10.354l7-7a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z" />
                </svg>
            </Footer>
        </ListarRazor2>
    </Authorized>
</AuthorizeView>


@code {

    public bool permitirEliminar { get; set; } = true;

    public ReservaCLS oReservaCLS { get; set; }

    [Parameter]
    public string idPagina { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> auth { get; set; }

    public ReservaCLS[] listaReservas;

    protected override async Task OnInitializedAsync()
    {
        var authUser = await auth;
        var user = authUser.User;
        int iidUsuario = int.Parse(user.Identity.Name);
        Console.WriteLine("Usuario:" + iidUsuario);
        if (user.Identity.IsAuthenticated)
        {
            listaReservas = await http.GetFromJsonAsync<ReservaCLS[]>("api/Reserva/ListarMisReservas/" + iidUsuario);
        }
    }

    public async Task Buscar(string valor)
    {
        //listaPagina = await http.GetFromJsonAsync<PaginaCLS[]>("api/Pagina/FiltrarPagina/" + valor);
    }

    public async Task Operaciones(string[] valores)
    {
        Console.WriteLine(valores[0]);
        Console.WriteLine(valores[1]);

        string texto = valores[1];
        var authUser = await auth;
        var user = authUser.User;
        int iidUsuarioRegistra = int.Parse(user.Identity.Name);

        if (texto == "Desea devolver la Reserva")
        {
            int rpta = await http.GetFromJsonAsync<int>("api/Reserva/ObservarReserva/" + valores[0] + "/" + iidUsuarioRegistra);

            if (rpta == 1)
            {
                listaReservas = await http.GetFromJsonAsync<ReservaCLS[]>("api/Reserva/ListarMisReservas/" + iidUsuarioRegistra);
            }
        }
        else if(texto == "Desea aceptar la Reserva")
        {
            int rpta = await http.GetFromJsonAsync<int>("api/Reserva/AceptarReserva/" + valores[0] + "/" + iidUsuarioRegistra);

            if (rpta == 1)
            {
                listaReservas = await http.GetFromJsonAsync<ReservaCLS[]>("api/Reserva/ListarMisReservas/" + iidUsuarioRegistra);
            }
        }
    }
}
